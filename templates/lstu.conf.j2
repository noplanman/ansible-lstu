# {{ ansible_managed }}

# vim:set sw=4 ts=4 sts=4 ft=perl expandtab:
{
    ####################
    # Hypnotoad settings
    ####################
    # see http://mojolicio.us/perldoc/Mojo/Server/Hypnotoad for a full list of settings
    hypnotoad => {
        # array of IP addresses and ports you want to listen to
{% if lstu_listen is string %}
        listen => ['{{ lstu_listen }}'],
{% else %}
        listen => {{ lstu_listen | to_json }},
{% endif %}
        # if you use Lstu behind a reverse proxy like Nginx, you want to set proxy to 1
        # if you use Lstu directly, let it commented
        #proxy  => 1,
{% if lstu_proxy is defined %}
        proxy => {{ lstu_proxy | ternary(1,0) }},
{% endif %}
    },

    # put a way to contact you here and uncomment it
    # MANDATORY
    #contact       => 'admin[at]example.com',
    contact => '{{ lstu_contact }}',

    # array of random strings used to encrypt cookies
    # optional, default is ['fdjsofjoihrei'], PLEASE, CHANGE IT
    #secret        => ['fdjsofjoihrei'],
    secret => {{ lstu_secrets | to_json }},

    # secret passphrase to access some admin features
    # If you don't want to have a plain text password in configuration,
    # use hashed_adminpwd instead
    # optional, but you won't have access to admin /stats if not set and if hashed_adminpwd is not set either
    #adminpwd      => 's3cr3T',
{% if lstu_adminpwd is defined and lstu_adminpwd != '' and not lstu_hash_adminpwd %}
    adminpwd => '{{ lstu_adminpwd }}',
{% endif %}

    # secret hashed passphrase to access some admin features
    # Hash your password by issuing `echo -n s3cr3T | sha256sum` on your terminal
    # optional, but you won't have access to admin /stats if not set and if adminpwd is not set either
    #hashed_adminpwd => '94b2feede6ea5e2eec62f457ecb7d3f719b24d19c29d4e5466246a31908fc23b',
{% if lstu_adminpwd is defined and lstu_adminpwd != '' and lstu_hash_adminpwd %}
    hashed_adminpwd => '{{ lstu_adminpwd | hash('sha256') }}',
{% endif %}

    # choose a theme. See the available themes in `themes` directory
    # optional, default is 'default'
    #theme         => 'default',
{% if lstu_theme is defined %}
    theme => '{{ lstu_theme }}',
{% endif %}

    # number of URLs to be displayed per page in /stats
    # optional, default is 10
    #page_offset   => 10,
{% if lstu_page_offset is defined %}
    page_offset => {{ lstu_page_offset }},
{% endif %}

    # length of the random URL
    # optional, default is 8
    #length            => 8,
{% if lstu_url_length is defined %}
    length => {{ lstu_url_length }},
{% endif %}

    # how many URLs will be provisioned in a batch ?
    # optional, default is 5
    #provis_step       => 5,
{% if lstu_provis_step is defined %}
    provis_step => {{ lstu_provis_step }},
{% endif %}

    # max number of URLs to be provisioned
    # optional, default is 100
    #provisioning      => 100,
{% if lstu_provisioning is defined %}
    provisioning => {{ lstu_provisioning }},
{% endif %}

    # URL sub-directory in which you want Lstu to be accessible
    # example: you want to have Lstu under https://example.org/lstu/
    # => set prefix to '/lstu' or to '/lstu/', it doesn't matter
    # optional, defaut is /
    #prefix        => '/',
{% if lstu_prefix is defined %}
    prefix => '{{ lstu_prefix }}',
{% endif %}

    # array of authorized domains for API calls.
    # if you want to authorize everyone to use the API: ['*']
    # optional, no domains allowed by default
    #allowed_domains   => ['http://1.example.com', 'http://2.example.com'],
{% if lstu_allowed_domains is defined %}
    allowed_domains => {{ lstu_allowed_domains | to_json }},
{% endif %}

    # if set, the shortened URLs will use this domain
    # optional
    #fixed_domain => 'example.org',
{% if lstu_fixed_domain is defined %}
    fixed_domain => '{{ lstu_fixed_domain }}',
{% endif %}

    # choose what database you want to use
    # valid choices are sqlite, postgresql and mysql (all lowercase)
    # optional, default is sqlite
    #dbtype => 'sqlite',
{% if lstu_db_type is defined %}
    dbtype => '{{ lstu_db_type }}',
{% endif %}

    # SQLite ONLY - only used if dbtype is set to sqlite
    # define a path to the SQLite database
    # you can define it relative to lstu directory or set an absolute path
    # remember that it has to be in a directory writable by Lstu user
    # optional, default is lstu.db
    #db_path           => 'lstu.db',
{% if (lstu_db_type is not defined or lstu_db_type == 'sqlite') and lstu_db_path is defined %}
    db_path => '{{ lstu_db_path }}',
{% endif %}

    # PostgreSQL ONLY - only used if dbtype is set to postgresql
    # these are the credentials to access the PostgreSQL database
    # mandatory if you choosed postgresql as dbtype
    #pgdb => {
    #    database => 'lstu',
    #    host     => 'localhost',
    #    #user     => 'DBUSER',
    #    #pwd      => 'DBPASSWORD'
    #},
{% if lstu_db_type is defined and lstu_db_type == 'postgresql' and lstu_pgdb is mapping %}
    pgdb => {
        {{ "database => '%s'," % lstu_pgdb.database if lstu_pgdb.database }}
        {{ "host     => '%s'," % lstu_pgdb.host     if lstu_pgdb.host }}
        {{ "user     => '%s'," % lstu_pgdb.user     if lstu_pgdb.user }}
        {{ "pwd      => '%s'," % lstu_pgdb.pwd      if lstu_pgdb.pwd }}
    },
{% endif %}

    # MySQL ONLY - only used if dbtype is set to mysql
    # these are the credentials to access the MySQL database
    # mandatory if you choosed mysql as dbtype
    #mysqldb => {
    #    database => 'lstu',
    #    host     => 'localhost',
    #    #user     => 'DBUSER',
    #    #pwd      => 'DBPASSWORD'
    #},
{% if lstu_db_type is defined and lstu_db_type == 'mysql' and lstu_mysqldb is mapping %}
    mysqldb => {
        {{ "database => '%s'," % lstu_mysqldb.database if lstu_mysqldb.database }}
        {{ "host     => '%s'," % lstu_mysqldb.host     if lstu_mysqldb.host }}
        {{ "user     => '%s'," % lstu_mysqldb.user     if lstu_mysqldb.user }}
        {{ "pwd      => '%s'," % lstu_mysqldb.pwd      if lstu_mysqldb.pwd }}
    },
{% endif %}

    # Rate-limiting for the API
    # After ban_min_strike requests in a second, the IP address will be
    # banned for one hour.
    # If it continues to query the API during this ban time at least
    # ban_min_strike times, it will be banned for a month.
    # optional, default is 3
    #ban_min_strike    => 3,
{% if lstu_ban_min_strike is defined %}
    ban_min_strike => {{ lstu_ban_min_strike }},
{% endif %}

    # Ban whitelist
    # You can whitelist IP addresses to prevent you from being banned
    # Be careful, the IP addresses are compared as string, not as IP addresses
    # a network range will not work
    # Example of valid input: ban_whitelist => ['198.51.100.42', '2001:0DB8::42'],
    # optional, default is an empty array
    #ban_whitelist => [],
{% if lstu_ban_whitelist is defined %}
    ban_whitelist => {{ lstu_ban_whitelist | to_json }},
{% endif %}

    # define an URL to the Piwik instance and the ID of a website to track
    # set if you want to track views in Piwik
    # optional, Piwik tracking is disabled by default
    #piwik => {
    #    url    => 'http://piwik.example.com',
    #    idsite => '1',
    #},
{% if lstu_piwik is mapping %}
    piwik => {
        {{ "url    => '%s'," % lstu_piwik.url    if lstu_piwik.url }}
        {{ "idsite => '%s'," % lstu_piwik.idsite if lstu_piwik.idsite }}
    },
{% elif lstu_piwik_url is defined and lstu_piwik_idsite is defined %}
    piwik => {
        url    => '{{ lstu_piwik_url }}',
        idsite => '{{ lstu_piwik_idsite }}',
    },
{% endif %}

    # use Minion instead of directly increase counters
    # need to launch a minion worker service if enabled
    # optional, Minion is disabled by default
    #minion => {
    #    enabled => 0,
    #    db_path => 'minion.db' # you can define it relative to lstu directory or set an absolute path
    #},
{% if lstu_minion is mapping %}
    minion => {
        {{ "enabled => %s,"   % lstu_minion.enabled | ternary(1,0) if lstu_minion.enabled is defined }}
        {{ "db_path => '%s'," % lstu_minion.db_path                if lstu_minion.db_path }}
    },
{% endif %}

    # set `ldap` if you want that only authenticated users can shorten URLs
    # please note that everybody can still use shortend URLs
    # optional, no default
    #ldap => {
    #    uri         => 'ldaps://ldap.example.org',
    #    user_tree   => 'ou=users,dc=example,dc=org',
    #    bind_dn     => ',ou=users,dc=example,dc=org',
    #    bind_user   => 'uid=ldap_user',
    #    bind_pwd    => 'secr3t',
    #    user_filter => '!(uid=ldap_user)'
    #},
{% if lstu_ldap is mapping %}
    ldap => {
        {{ "uri         => '%s'," % lstu_ldap.uri         if lstu_ldap.uri         }}
        {{ "user_tree   => '%s'," % lstu_ldap.user_tree   if lstu_ldap.user_tree   }}
        {{ "bind_dn     => '%s'," % lstu_ldap.bind_dn     if lstu_ldap.bind_dn     }}
        {{ "bind_user   => '%s'," % lstu_ldap.bind_user   if lstu_ldap.bind_user   }}
        {{ "bind_pwd    => '%s'," % lstu_ldap.bind_pwd    if lstu_ldap.bind_pwd    }}
        {{ "user_filter => '%s'," % lstu_ldap.user_filter if lstu_ldap.user_filter }}
    },
{% endif %}

    # set `htpasswd` if you want to use an htpasswd file instead of ldap
    # create the file with `htpasswd -c lstu.passwd user`, update it with `htpasswd lstu.passwd user2`
    # make sure that lstu can read the file!
    # optional, no default
    #htpasswd => 'lstu.passwd',
{% if lstu_htpasswd is defined %}
    htpasswd => '{{ lstu_htpasswd }}',
{% endif %}

    # if you've set ldap or htpasswd above, the session will last `session_duration` seconds before
    # the user needs to reauthenticate
    # optional, default is 3600
    #session_duration => 3600,
{% if lstu_session_duration is defined %}
    session_duration => {{ lstu_session_duration }},
{% endif %}

    # how many redirections are allowed for the shortened URL before considering it as a spam?
    # optional, default is 2. Set to -1 to allow infinite redirections (not recommended)
    #max_redir => 2,
{% if lstu_max_redir is defined %}
    max_redir => {{ lstu_max_redir }},
{% endif %}

    # spam blacklist regex. All URLs (or redirection) whose host part matches this regex are considered as spam
    # optional, no default
    #spam_blacklist_regex => 'foo|bar',
{% if lstu_spam_blacklist_regex is defined %}
    spam_blacklist_regex => '{{ lstu_spam_blacklist_regex }}',
{% endif %}

    # spam whitelist regex. All URLs (or redirection) whose host part matches this regex will never be considered as spam
    # optional, no default
    #spam_whitelist_regex => 'foo|bar',
{% if lstu_spam_whitelist_regex is defined %}
    spam_whitelist_regex => '{{ lstu_spam_whitelist_regex }}',
{% endif %}

    # set to 1 to skip SpamHaus check (not recommended)
    # optional, default is 0
    #skip_spamhaus => 0,
{% if lstu_skip_spamhaus is defined %}
    skip_spamhaus => {{ lstu_skip_spamhaus | ternary(1,0) }},
{% endif %}
};
